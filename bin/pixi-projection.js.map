{"version":3,"file":"pixi-projection.js","sourceRoot":"","sources":["../compilation.ts"],"names":[],"mappings":"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G,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAElC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAClC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAEpC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAE3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAE3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,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","sourcesContent":["namespace pixi_projection {\r\n\texport class Container2d extends PIXI.Sprite {\r\n\t\tconstructor(texture: PIXI.Texture) {\r\n\t\t\tsuper(texture);\r\n\t\t\tthis.proj = new Projection2d(this.transform);\r\n\t\t}\r\n\r\n\t\tproj: Projection2d;\r\n\r\n\t\tget worldTransform() {\r\n\t\t\treturn this.proj.world as any;\r\n\t\t}\r\n\t}\r\n}// according to https://jsperf.com/obj-vs-array-view-access/1 , Float64Array is the best here\r\n\r\nnamespace pixi_projection {\r\n\timport Point = PIXI.Point;\r\n\timport IPoint = PIXI.PointLike;\r\n\r\n\tconst mat3id = [1, 0, 0, 0, 1, 0, 0, 0, 1];\r\n\r\n\texport class Matrix2d {\r\n\t\t/**\r\n\t\t * A default (identity) matrix\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @const\r\n\t\t */\r\n\t\tstatic readonly IDENTITY = new Matrix2d();\r\n\r\n\t\t/**\r\n\t\t * A temp matrix\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @const\r\n\t\t */\r\n\t\tstatic readonly TEMP_MATRIX = new Matrix2d();\r\n\r\n\t\t/**\r\n\t\t * mat3 implementation through array of 9 elements\r\n\t\t */\r\n\t\tmat3: Float64Array;\r\n\r\n\t\tfloatArray: Float32Array = null;\r\n\r\n\t\tconstructor(backingArray?: ArrayLike<number>) {\r\n\t\t\tthis.mat3 = new Float64Array(backingArray || mat3id);\r\n\t\t}\r\n\r\n\t\tget a() {\r\n\t\t\treturn this.mat3[0];\r\n\t\t}\r\n\r\n\t\tget b() {\r\n\t\t\treturn this.mat3[1];\r\n\t\t}\r\n\r\n\t\tget c() {\r\n\t\t\treturn this.mat3[3];\r\n\t\t}\r\n\r\n\t\tget d() {\r\n\t\t\treturn this.mat3[4];\r\n\t\t}\r\n\r\n\t\tget tx() {\r\n\t\t\treturn this.mat3[6];\r\n\t\t}\r\n\r\n\t\tget ty() {\r\n\t\t\treturn this.mat3[7];\r\n\t\t}\r\n\r\n\t\tset a(value: number) {\r\n\t\t\tthis.mat3[0] = value;\r\n\t\t}\r\n\r\n\t\tset b(value: number) {\r\n\t\t\tthis.mat3[1] = value;\r\n\t\t}\r\n\r\n\t\tset c(value: number) {\r\n\t\t\tthis.mat3[3] = value;\r\n\t\t}\r\n\r\n\t\tset d(value: number) {\r\n\t\t\tthis.mat3[4] = value;\r\n\t\t}\r\n\r\n\t\tset tx(value: number) {\r\n\t\t\tthis.mat3[6] = value;\r\n\t\t}\r\n\r\n\t\tset ty(value: number) {\r\n\t\t\tthis.mat3[7] = value;\r\n\t\t}\r\n\r\n\t\tset(a: number, b: number, c: number, d: number, tx: number, ty: number) {\r\n\t\t\tlet mat3 = this.mat3;\r\n\t\t\tmat3[0] = a;\r\n\t\t\tmat3[1] = b;\r\n\t\t\tmat3[3] = c;\r\n\t\t\tmat3[4] = d;\r\n\t\t\tmat3[6] = tx;\r\n\t\t\tmat3[7] = ty;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\ttoArray(transpose?: boolean, out?: Float32Array): Float32Array {\r\n\t\t\tif (!this.floatArray) {\r\n\t\t\t\tthis.floatArray = new Float32Array(9);\r\n\t\t\t}\r\n\r\n\t\t\tconst array = out || this.floatArray;\r\n\t\t\tconst mat3 = this.mat3;\r\n\r\n\t\t\tif (transpose) {\r\n\t\t\t\tarray[0] = mat3[0];\r\n\t\t\t\tarray[1] = mat3[1];\r\n\t\t\t\tarray[2] = mat3[2];\r\n\t\t\t\tarray[3] = mat3[3];\r\n\t\t\t\tarray[4] = mat3[4];\r\n\t\t\t\tarray[5] = mat3[5];\r\n\t\t\t\tarray[6] = mat3[6];\r\n\t\t\t\tarray[7] = mat3[7];\r\n\t\t\t\tarray[8] = mat3[8];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t//this branch is NEVER USED in pixi\r\n\t\t\t\tarray[0] = mat3[0];\r\n\t\t\t\tarray[1] = mat3[3];\r\n\t\t\t\tarray[2] = mat3[6];\r\n\t\t\t\tarray[3] = mat3[1];\r\n\t\t\t\tarray[4] = mat3[4];\r\n\t\t\t\tarray[5] = mat3[7];\r\n\t\t\t\tarray[6] = mat3[2];\r\n\t\t\t\tarray[7] = mat3[5];\r\n\t\t\t\tarray[8] = mat3[8];\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\t\t}\r\n\r\n\t\t//TODO: remove props\r\n\t\tapply(pos: IPoint, newPos: IPoint): IPoint {\r\n\t\t\tnewPos = newPos || new PIXI.Point();\r\n\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tconst x = pos.x;\r\n\t\t\tconst y = pos.y;\r\n\r\n\t\t\tlet z = 1.0 / (mat3[2] * x + mat3[5] * y + mat3[8]);\r\n\t\t\tnewPos.x = z * (mat3[0] * x + mat3[3] * y + mat3[6]);\r\n\t\t\tnewPos.y = z * (mat3[1] * x + mat3[4] * y + mat3[7]);\r\n\r\n\t\t\treturn newPos;\r\n\t\t}\r\n\r\n\t\t//TODO: remove props\r\n\t\tapplyInverse(pos: IPoint, newPos: IPoint): IPoint {\r\n\t\t\tnewPos = newPos || new Point();\r\n\r\n\t\t\tconst a = this.mat3;\r\n\t\t\tconst x = pos.x;\r\n\t\t\tconst y = pos.y;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[3], a02 = a[6],\r\n\t\t\t\ta10 = a[1], a11 = a[4], a12 = a[7],\r\n\t\t\t\ta20 = a[2], a21 = a[5], a22 = a[8];\r\n\r\n\t\t\tlet newX = (a22 * a11 - a12 * a21) * x + (-a22 * a01 + a02 * a21) * y + (a12 * a01 - a02 * a11);\r\n\t\t\tlet newY = (-a22 * a10 + a12 * a20) * x + (a22 * a00 - a02 * a20) * y + (-a12 * a00 + a02 * a10);\r\n\t\t\tlet newZ = (a21 * a10 - a11 * a20) * x + (-a21 * a00 + a01 * a20) * y + (a11 * a00 - a01 * a10);\r\n\r\n\t\t\tnewPos.x = newX / newZ;\r\n\t\t\tnewPos.y = newY / newZ;\r\n\r\n\t\t\treturn newPos;\r\n\t\t}\r\n\r\n\t\tinvert(): Matrix2d {\r\n\t\t\tconst a = this.mat3;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\r\n\t\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\r\n\t\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n\t\t\t\tb01 = a22 * a11 - a12 * a21,\r\n\t\t\t\tb11 = -a22 * a10 + a12 * a20,\r\n\t\t\t\tb21 = a21 * a10 - a11 * a20;\r\n\r\n\t\t\t// Calculate the determinant\r\n\t\t\tlet det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\t\t\tif (!det) {\r\n\t\t\t\treturn this;\r\n\t\t\t}\r\n\t\t\tdet = 1.0 / det;\r\n\r\n\t\t\ta[0] = b01 * det;\r\n\t\t\ta[1] = (-a22 * a01 + a02 * a21) * det;\r\n\t\t\ta[2] = (a12 * a01 - a02 * a11) * det;\r\n\t\t\ta[3] = b11 * det;\r\n\t\t\ta[4] = (a22 * a00 - a02 * a20) * det;\r\n\t\t\ta[5] = (-a12 * a00 + a02 * a10) * det;\r\n\t\t\ta[6] = b21 * det;\r\n\t\t\ta[7] = (-a21 * a00 + a01 * a20) * det;\r\n\t\t\ta[8] = (a11 * a00 - a01 * a10) * det;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tidentity(): Matrix2d {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tmat3[0] = 1;\r\n\t\t\tmat3[1] = 0;\r\n\t\t\tmat3[2] = 0;\r\n\t\t\tmat3[3] = 0;\r\n\t\t\tmat3[4] = 1;\r\n\t\t\tmat3[5] = 0;\r\n\t\t\tmat3[6] = 0;\r\n\t\t\tmat3[7] = 0;\r\n\t\t\tmat3[8] = 1;\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tclone() {\r\n\t\t\treturn new Matrix2d(this.mat3);\r\n\t\t}\r\n\r\n\t\tcopyTo(matrix: Matrix2d) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tconst ar2 = matrix.mat3;\r\n\t\t\tar2[0] = mat3[0];\r\n\t\t\tar2[1] = mat3[1];\r\n\t\t\tar2[2] = mat3[2];\r\n\t\t\tar2[3] = mat3[3];\r\n\t\t\tar2[4] = mat3[4];\r\n\t\t\tar2[5] = mat3[5];\r\n\t\t\tar2[6] = mat3[6];\r\n\t\t\tar2[7] = mat3[7];\r\n\t\t\tar2[8] = mat3[8];\r\n\t\t\treturn matrix;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * legacy method, change the values of given pixi matrix\r\n\t\t * @param matrix\r\n\t\t * @return\r\n\t\t */\r\n\t\tcopy(matrix: PIXI.Matrix) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tconst d = 1.0 / mat3[8];\r\n\t\t\tmatrix.a = mat3[0] * d;\r\n\t\t\tmatrix.b = mat3[1] * d;\r\n\t\t\tmatrix.c = mat3[3] * d;\r\n\t\t\tmatrix.d = mat3[4] * d;\r\n\t\t\tmatrix.tx = mat3[6] * d;\r\n\t\t\tmatrix.ty = mat3[7] * d;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * legacy method, change the values of given pixi matrix\r\n\t\t * @param matrix\r\n\t\t * @return\r\n\t\t */\r\n\t\tcopyFrom(matrix: PIXI.Matrix) {\r\n\t\t\tconst mat3 = this.mat3;\r\n\t\t\tmat3[0] = matrix.a;\r\n\t\t\tmat3[1] = matrix.b;\r\n\t\t\tmat3[2] = 0;\r\n\t\t\tmat3[3] = matrix.c;\r\n\t\t\tmat3[4] = matrix.d;\r\n\t\t\tmat3[5] = 0;\r\n\t\t\tmat3[6] = matrix.tx;\r\n\t\t\tmat3[7] = matrix.ty;\r\n\t\t\tmat3[8] = 1.0;\r\n\t\t}\r\n\r\n\t\tsetToMultLegacy(pt: PIXI.Matrix, lt: Matrix2d) {\r\n\t\t\tconst out = this.mat3;\r\n\t\t\tconst b = lt.mat3;\r\n\r\n\t\t\tconst a00 = pt.a, a01 = pt.b,\r\n\t\t\t\ta10 = pt.c, a11 = pt.d,\r\n\t\t\t\ta20 = pt.tx, a21 = pt.ty,\r\n\r\n\t\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\r\n\t\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\r\n\t\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\r\n\r\n\r\n\t\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n\t\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n\t\t\tout[2] = b02;\r\n\r\n\t\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n\t\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n\t\t\tout[5] = b12;\r\n\r\n\t\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n\t\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n\t\t\tout[8] = b22;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\t// that's transform multiplication we use\r\n\t\tsetToMult2d(pt: Matrix2d, lt: Matrix2d) {\r\n\t\t\tconst out = this.mat3;\r\n\t\t\tconst a = pt.mat3, b = lt.mat3;\r\n\r\n\t\t\tconst a00 = a[0], a01 = a[1], a02 = a[2],\r\n\t\t\t\ta10 = a[3], a11 = a[4], a12 = a[5],\r\n\t\t\t\ta20 = a[6], a21 = a[7], a22 = a[8],\r\n\r\n\t\t\t\tb00 = b[0], b01 = b[1], b02 = b[2],\r\n\t\t\t\tb10 = b[3], b11 = b[4], b12 = b[5],\r\n\t\t\t\tb20 = b[6], b21 = b[7], b22 = b[8];\r\n\r\n\t\t\tout[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n\t\t\tout[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n\t\t\tout[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n\t\t\tout[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n\t\t\tout[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n\t\t\tout[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n\t\t\tout[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n\t\t\tout[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n\t\t\tout[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n}\r\ndeclare namespace PIXI {\r\n    export interface TransformBase {\r\n        proj: pixi_projection.Projection2d;\r\n    }\r\n\r\n    export interface ObservablePoint {\r\n        _x: number;\r\n        _y: number;\r\n    }\r\n\r\n    export interface TransformStatic {\r\n        proj: pixi_projection.Projection2d;\r\n    }\r\n}\r\n\r\nnamespace pixi_projection {\r\n    import PointLike = PIXI.PointLike;\r\n\r\n    function transformHack(this: PIXI.TransformStatic, parentTransform: PIXI.TransformBase) {\r\n        // implementation here\r\n        const proj = this.proj;\r\n        const ta = this as any;\r\n        const pwid = (parentTransform as any)._worldID;\r\n\r\n        const lt = ta.localTransform;\r\n\r\n        //this part is copied from\r\n        if (ta._localID !== ta._currentLocalID) {\r\n            // get the matrix values of the displayobject based on its transform properties..\r\n            lt.a = ta._cx * ta.scale._x;\r\n            lt.b = ta._sx * ta.scale._x;\r\n            lt.c = ta._cy * ta.scale._y;\r\n            lt.d = ta._sy * ta.scale._y;\r\n\r\n            //TODO: do something about pivot, it has to be applied after the projections\r\n            //TODO: add special pivot mode that user request for 2 years already\r\n\r\n            lt.tx = ta.position._x - ((ta.pivot._x * lt.a) + (ta.pivot._y * lt.c));\r\n            lt.ty = ta.position._y - ((ta.pivot._x * lt.b) + (ta.pivot._y * lt.d));\r\n            ta._currentLocalID = ta._localID;\r\n\r\n            // force an update..\r\n            proj._currentMatrixID = -1;\r\n        }\r\n\r\n        const _matrixID = proj._matrixID;\r\n        if (proj._currentMatrixID !== _matrixID) {\r\n            proj._currentMatrixID = _matrixID;\r\n            if (_matrixID !== 0) {\r\n                proj.local.setToMultLegacy(lt, proj.matrix);\r\n            } else {\r\n                proj.local.copyFrom(lt);\r\n            }\r\n            ta._parentID = -1;\r\n        }\r\n\r\n        if (ta._parentID !== pwid) {\r\n            const pp = parentTransform.proj;\r\n            if (pp) {\r\n                proj.world.setToMult2d(pp.world, proj.local);\r\n            } else {\r\n                proj.world.setToMultLegacy(parentTransform.worldTransform, proj.local);\r\n            }\r\n            proj.world.copy(ta.worldTransform);\r\n            ta._parentID = pwid;\r\n            ta._worldID++;\r\n        }\r\n    }\r\n\r\n    const t0 = new PIXI.Point();\r\n    const t1 = new PIXI.Point();\r\n    const t2 = new PIXI.Point();\r\n    const tempZero = new PIXI.Point(0, 0);\r\n    const tempMat = new Matrix2d();\r\n\r\n    export class Projection2d {\r\n\r\n        constructor(legacy: PIXI.TransformBase, enable: boolean = true) {\r\n            this.legacy = legacy as PIXI.TransformStatic;\r\n\r\n            if (enable) {\r\n                this.enabled = true;\r\n            }\r\n\r\n            // sorry for hidden class, it would be good to have special projection field in official pixi\r\n            this.legacy.proj = this;\r\n        }\r\n\r\n        legacy: PIXI.TransformStatic;\r\n\r\n        matrix = new Matrix2d();\r\n        local = new Matrix2d();\r\n        world = new Matrix2d();\r\n\r\n        _matrixID = 0;\r\n        _currentMatrixID = -1;\r\n\r\n        _enabled: boolean = false;\r\n\r\n        get enabled() {\r\n            return this._enabled;\r\n        }\r\n\r\n        set enabled(value: boolean) {\r\n            if (value === this._enabled) {\r\n                return;\r\n            }\r\n            this._enabled = value;\r\n            if (value) {\r\n                this.legacy.updateTransform = transformHack;\r\n            } else {\r\n                this.legacy.updateTransform = PIXI.TransformStatic.prototype.updateTransform;\r\n            }\r\n        }\r\n\r\n        setAxisX(p: PointLike, factor: number = 1): void {\r\n            const x = p.x, y = p.y;\r\n            const d = Math.sqrt(x * x + y * y);\r\n            const mat3 = this.matrix.mat3;\r\n            mat3[0] = x / d;\r\n            mat3[1] = y / d;\r\n            mat3[2] = factor / d;\r\n            this._matrixID++;\r\n        }\r\n\r\n        setAxisY(p: PointLike, factor: number = 1) {\r\n            const x = p.x, y = p.y;\r\n            const d = Math.sqrt(x * x + y * y);\r\n            const mat3 = this.matrix.mat3;\r\n            mat3[3] = x / d;\r\n            mat3[4] = y / d;\r\n            mat3[5] = factor / d;\r\n            this._matrixID++;\r\n        }\r\n\r\n        setFromQuad(p: Array<PointLike>, anchor: PointLike = tempZero, sizeX: number = 1, sizeY: number = 1) {\r\n            // utils.getPositionFromQuad(p, anchor, t0);\r\n\r\n            let mat3 = this.matrix.mat3;\r\n            mat3[6] = 0;\r\n            mat3[7] = 0;\r\n            mat3[8] = 1;\r\n            // mat3[6] = t0.x;\r\n            // mat3[7] = t0.y;\r\n            // mat3[8] = 1;\r\n\r\n            let f1 = utils.getIntersectionFactor(p[0], p[1], p[3], p[2], t1);\r\n            this.setAxisX(t1, f1);\r\n            let f2 = utils.getIntersectionFactor(p[1], p[2], p[0], p[3], t2);\r\n            this.setAxisY(t2, f2);\r\n\r\n            this.matrix.applyInverse(p[0], t1);\r\n            this.matrix.applyInverse(p[2], t2);\r\n\r\n            let m3 = tempMat.mat3;\r\n            //for anchor (0,0)\r\n            m3[0] = (t2.x - t1.x) / sizeX;\r\n            m3[6] = t1.x;\r\n            m3[4] = (t2.y - t1.y) / sizeY;\r\n            m3[7] = t1.y;\r\n            this.matrix.setToMult2d(this.matrix, tempMat);\r\n        }\r\n\r\n        clear() {\r\n            this._currentMatrixID = -1;\r\n            this._matrixID = 0;\r\n            this.matrix.identity();\r\n        }\r\n    }\r\n}\r\ndeclare module PIXI {\r\n    interface Sprite {\r\n        convertTo2d(): void;\r\n    }\r\n\r\n    interface Container {\r\n        convertTo2d(): void;\r\n        convertSubtreeTo2d(): void;\r\n    }\r\n}\r\n\r\nnamespace pixi_projection {\r\n    (PIXI as any).Sprite.prototype.convertTo2d = function () {\r\n        if (this.proj) return;\r\n        this.calculateVertices = Sprite2d.prototype.calculateVertices;\r\n        this.calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n        //cointainer\r\n        this.proj = new Projection2d(this.transform);\r\n        this.pluginName = 'sprite2d';\r\n        Object.defineProperty(this, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj.world;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    };\r\n\r\n    (PIXI as any).Container.prototype.convertTo2d = function () {\r\n        if (this.proj) return;\r\n        this.proj = new Projection2d(this.transform);\r\n        this.pluginName = 'sprite2d';\r\n        Object.defineProperty(this, \"worldTransform\", {\r\n            get: function () {\r\n                return this.proj.world;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n    };\r\n\r\n    (PIXI as any).Container.prototype.convertSubtreeTo2d = function () {\r\n        this.convertTo2d();\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            this.children[i].convertSubtreeTo2d();\r\n        }\r\n    };\r\n}\r\nnamespace pixi_projection {\r\n\texport class Sprite2d extends PIXI.Sprite {\r\n\t\tconstructor(texture: PIXI.Texture) {\r\n\t\t\tsuper(texture);\r\n\t\t\tthis.proj = new Projection2d(this.transform);\r\n\t\t\tthis.pluginName = 'sprite2d';\r\n\t\t\tthis.vertexData = new Float32Array(12);\r\n\t\t}\r\n\r\n\t\tproj: Projection2d;\r\n\r\n\t\tcalculateVertices() {\r\n\t\t\tconst wid = (this.transform as any)._worldID;\r\n\t\t\tconst tuid = (this._texture as any)._updateID;\r\n\t\t\tif (this._transformID === wid && this._textureID === tuid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._transformID = wid;\r\n\t\t\tthis._textureID = tuid;\r\n\r\n\t\t\tconst texture = this._texture;\r\n\t\t\tconst wt = this.proj.world.mat3;\r\n\t\t\tconst vertexData = this.vertexData;\r\n\t\t\tconst trim = texture.trim;\r\n\t\t\tconst orig = texture.orig;\r\n\t\t\tconst anchor = this._anchor;\r\n\r\n\t\t\tlet w0 = 0;\r\n\t\t\tlet w1 = 0;\r\n\t\t\tlet h0 = 0;\r\n\t\t\tlet h1 = 0;\r\n\r\n\t\t\tif (trim) {\r\n\t\t\t\tw1 = trim.x - (anchor._x * orig.width);\r\n\t\t\t\tw0 = w1 + trim.width;\r\n\r\n\t\t\t\th1 = trim.y - (anchor._y * orig.height);\r\n\t\t\t\th0 = h1 + trim.height;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tw1 = -anchor._x * orig.width;\r\n\t\t\t\tw0 = w1 + orig.width;\r\n\r\n\t\t\t\th1 = -anchor._y * orig.height;\r\n\t\t\t\th0 = h1 + orig.height;\r\n\t\t\t}\r\n\r\n\t\t\tvertexData[0] = (wt[0] * w1) + (wt[3] * h1) + wt[6];\r\n\t\t\tvertexData[1] = (wt[1] * w1) + (wt[4] * h1) + wt[7];\r\n\t\t\tvertexData[2] = (wt[2] * w1) + (wt[5] * h1) + wt[8];\r\n\r\n\t\t\tvertexData[3] = (wt[0] * w0) + (wt[3] * h1) + wt[6];\r\n\t\t\tvertexData[4] = (wt[1] * w0) + (wt[4] * h1) + wt[7];\r\n\t\t\tvertexData[5] = (wt[2] * w0) + (wt[5] * h1) + wt[8];\r\n\r\n\t\t\tvertexData[6] = (wt[0] * w0) + (wt[3] * h0) + wt[6];\r\n\t\t\tvertexData[7] = (wt[1] * w0) + (wt[4] * h0) + wt[7];\r\n\t\t\tvertexData[8] = (wt[2] * w0) + (wt[5] * h0) + wt[8];\r\n\r\n\t\t\tvertexData[9] = (wt[0] * w1) + (wt[3] * h0) + wt[6];\r\n\t\t\tvertexData[10] = (wt[1] * w1) + (wt[4] * h0) + wt[7];\r\n\t\t\tvertexData[11] = (wt[2] * w1) + (wt[5] * h0) + wt[8];\r\n\t\t}\r\n\r\n\t\tcalculateTrimmedVertices() {\r\n\t\t\tconst wid = (this.transform as any)._worldID;\r\n\t\t\tconst tuid = (this._texture as any)._updateID;\r\n\t\t\tif (!this.vertexTrimmedData) {\r\n\t\t\t\tthis.vertexTrimmedData = new Float32Array(8);\r\n\t\t\t}\r\n\t\t\telse if (this._transformTrimmedID === wid && this._textureTrimmedID === tuid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._transformTrimmedID = wid;\r\n\t\t\tthis._textureTrimmedID = tuid;\r\n\r\n\t\t\t// lets do some special trim code!\r\n\t\t\tconst texture = this._texture;\r\n\t\t\tconst vertexData = this.vertexTrimmedData;\r\n\t\t\tconst orig = texture.orig;\r\n\t\t\tconst anchor = this._anchor;\r\n\r\n\t\t\t// lets calculate the new untrimmed bounds..\r\n\t\t\tconst wt = this.proj.world.mat3;\r\n\r\n\t\t\tconst w1 = -anchor._x * orig.width;\r\n\t\t\tconst w0 = w1 + orig.width;\r\n\r\n\t\t\tconst h1 = -anchor._y * orig.height;\r\n\t\t\tconst h0 = h1 + orig.height;\r\n\r\n\t\t\tlet z = 1.0 / (wt[2] * w1 + wt[5] * h1 + wt[8]);\r\n\t\t\tvertexData[0] = z * ((wt[0] * w1) + (wt[3] * h1) + wt[6]);\r\n\t\t\tvertexData[1] = z * ((wt[1] * w1) + (wt[4] * h1) + wt[7]);\r\n\r\n\t\t\tz = 1.0 / (wt[2] * w0 + wt[5] * h1 + wt[8]);\r\n\t\t\tvertexData[2] = z * ((wt[0] * w0) + (wt[3] * h1) + wt[6]);\r\n\t\t\tvertexData[3] = z * ((wt[1] * w0) + (wt[4] * h1) + wt[7]);\r\n\r\n\t\t\tz = 1.0 / (wt[2] * w0 + wt[5] * h0 + wt[8]);\r\n\t\t\tvertexData[4] = z * ((wt[0] * w0) + (wt[3] * h0) + wt[6]);\r\n\t\t\tvertexData[5] = z * ((wt[1] * w0) + (wt[4] * h0) + wt[7]);\r\n\r\n\t\t\tz = 1.0 / (wt[2] * w1 + wt[5] * h0 + wt[8]);\r\n\t\t\tvertexData[6] = z * ((wt[0] * w1) + (wt[3] * h0) + wt[6]);\r\n\t\t\tvertexData[7] = z * ((wt[1] * w1) + (wt[4] * h0) + wt[7]);\r\n\t\t}\r\n\r\n\t\tget worldTransform() {\r\n\t\t\treturn this.proj.world as any;\r\n\t\t}\r\n\t}\r\n}\r\nnamespace pixi_projection {\r\n    export class Text2d extends PIXI.Text {\r\n        constructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\r\n            super(text, style, canvas);\r\n            this.proj = new Projection2d(this.transform);\r\n            this.pluginName = 'sprite2d';\r\n            this.vertexData = new Float32Array(12);\r\n        }\r\n\r\n        proj: Projection2d;\r\n\r\n        get worldTransform() {\r\n            return this.proj.world as any;\r\n        }\r\n    }\r\n\r\n    Text2d.prototype.calculateVertices = Sprite2d.prototype.calculateVertices;\r\n    (Text2d.prototype as any).calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n}\r\nnamespace pixi_projection.webgl {\r\n\texport class BatchBuffer {\r\n\t\tvertices: ArrayBuffer;\r\n\t\tfloat32View: Float32Array;\r\n\t\tuint32View: Uint32Array;\r\n\r\n\r\n\t\tconstructor(size: number) {\r\n\t\t\tthis.vertices = new ArrayBuffer(size);\r\n\r\n\t\t\t/**\r\n\t\t\t * View on the vertices as a Float32Array for positions\r\n\t\t\t *\r\n\t\t\t * @member {Float32Array}\r\n\t\t\t */\r\n\t\t\tthis.float32View = new Float32Array(this.vertices);\r\n\r\n\t\t\t/**\r\n\t\t\t * View on the vertices as a Uint32Array for uvs\r\n\t\t\t *\r\n\t\t\t * @member {Float32Array}\r\n\t\t\t */\r\n\t\t\tthis.uint32View = new Uint32Array(this.vertices);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Destroys the buffer.\r\n\t\t *\r\n\t\t */\r\n\t\tdestroy() {\r\n\t\t\tthis.vertices = null;\r\n\t\t}\r\n\t}\r\n}\r\nnamespace pixi_projection.webgl {\r\n    export const defaultTextureVertex =\r\n        `precision highp float;\r\nattribute vec3 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aColor;\r\nattribute float aTextureId;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vColor;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n    gl_Position.xyw = projectionMatrix * aVertexPosition;\r\n    gl_Position.z = 0.0;\r\n    \r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vColor = aColor;\r\n}\r\n`\r\n    const fragTemplate = [\r\n        'varying vec2 vTextureCoord;',\r\n        'varying vec4 vColor;',\r\n        'varying float vTextureId;',\r\n        'uniform sampler2D uSamplers[%count%];',\r\n\r\n        'void main(void){',\r\n        'vec4 color;',\r\n        'float textureId = floor(vTextureId+0.5);',\r\n        '%forloop%',\r\n        'gl_FragColor = color * vColor;',\r\n        '}',\r\n    ].join('\\n');\r\n\r\n    export function generateMultiTextureShader(gl: WebGLRenderingContext, maxTextures: number) {\r\n        let fragmentSrc = fragTemplate;\r\n\r\n        fragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures+'');\r\n        fragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\r\n\r\n        const shader = new PIXI.Shader(gl, defaultTextureVertex, fragmentSrc);\r\n\r\n        const sampleValues = new Int32Array(maxTextures);\r\n\r\n        for (let i = 0; i < maxTextures; i++) {\r\n            sampleValues[i] = i;\r\n        }\r\n\r\n        shader.bind();\r\n        shader.uniforms.uSamplers = sampleValues;\r\n\r\n        return shader;\r\n    }\r\n\r\n    function generateSampleSrc(maxTextures: number) {\r\n        let src = '';\r\n\r\n        src += '\\n';\r\n        src += '\\n';\r\n\r\n        for (let i = 0; i < maxTextures; i++) {\r\n            if (i > 0) {\r\n                src += '\\nelse ';\r\n            }\r\n\r\n            if (i < maxTextures - 1) {\r\n                src += `if(textureId == ${i}.0)`;\r\n            }\r\n\r\n            src += '\\n{';\r\n            src += `\\n\\tcolor = texture2D(uSamplers[${i}], vTextureCoord);`;\r\n            src += '\\n}';\r\n        }\r\n\r\n        src += '\\n';\r\n        src += '\\n';\r\n\r\n        return src;\r\n    }\r\n}\r\ndeclare module PIXI {\r\n    export interface ObjectRenderer {\r\n        renderer: WebGLRenderer;\r\n    }\r\n\r\n    export interface BaseTexture {\r\n        _virtalBoundId: number;\r\n    }\r\n}\r\n\r\nnamespace pixi_projection.webgl {\r\n    import BaseTexture = PIXI.BaseTexture;\r\n    import ObjectRenderer = PIXI.ObjectRenderer;\r\n    import settings = PIXI.settings;\r\n    import GLBuffer = PIXI.glCore.GLBuffer;\r\n    import VertexArrayObject = PIXI.glCore.VertexArrayObject;\r\n\r\n    import WebGLRenderer = PIXI.WebGLRenderer;\r\n    import Sprite = PIXI.Sprite;\r\n\r\n    import premultiplyTint = PIXI.utils.premultiplyTint;\r\n    import premultiplyBlendMode = PIXI.utils.premultiplyBlendMode;\r\n\r\n    let TICK = 0;\r\n\r\n    export class BatchGroup {\r\n        textures: Array<BaseTexture> = [];\r\n        textureCount = 0;\r\n        ids: Array<Number> = [];\r\n        size = 0;\r\n        start = 0;\r\n        blend = PIXI.BLEND_MODES.NORMAL;\r\n    }\r\n\r\n    export class SpriteRenderer extends ObjectRenderer {\r\n        vertSize = 6;\r\n        vertByteSize = this.vertSize * 4;\r\n        size = settings.SPRITE_BATCH_SIZE;\r\n        buffers: Array<BatchBuffer>;\r\n\r\n        indices: Uint16Array;\r\n\r\n        shader: PIXI.Shader;\r\n\r\n        currentIndex = 0;\r\n        groups: Array<BatchGroup>;\r\n        sprites: Array<Sprite> = [];\r\n\r\n        indexBuffer: GLBuffer;\r\n        vertexBuffers: Array<GLBuffer> = [];\r\n        vaos: Array<VertexArrayObject> = [];\r\n        vao: VertexArrayObject;\r\n        vaoMax = 2;\r\n        vertexCount = 0;\r\n\r\n        MAX_TEXTURES = 1;\r\n\r\n        /**\r\n         * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\r\n         */\r\n        constructor(renderer: WebGLRenderer) {\r\n            super(renderer);\r\n\r\n            this.indices = utils.createIndicesForQuads(this.size);\r\n\r\n            this.groups = [];\r\n            for (let k = 0; k < this.size; k++) {\r\n                this.groups[k] = new BatchGroup();\r\n            }\r\n\r\n            this.buffers = [];\r\n            for (let i = 1; i <= utils.nextPow2(this.size); i *= 2) {\r\n                this.buffers.push(new BatchBuffer(i * 4 * this.vertByteSize));\r\n            }\r\n\r\n            this.vaoMax = 2;\r\n            this.vertexCount = 0;\r\n\r\n            this.renderer.on('prerender', this.onPrerender, this);\r\n        }\r\n\r\n        /**\r\n         * Sets up the renderer context and necessary buffers.\r\n         *\r\n         * @private\r\n         */\r\n        onContextChange() {\r\n            const gl = this.renderer.gl;\r\n\r\n            this.MAX_TEXTURES = this.renderer.plugins['sprite'].MAX_TEXTURES;\r\n\r\n            // generate generateMultiTextureProgram, may be a better move?\r\n            this.shader = generateMultiTextureShader(gl, this.MAX_TEXTURES);\r\n\r\n            this.indexBuffer = GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\r\n\r\n            // we use the second shader as the first one depending on your browser may omit aTextureId\r\n            // as it is not used by the shader so is optimized out.\r\n\r\n            this.renderer.bindVao(null);\r\n\r\n            const attrs = this.shader.attributes;\r\n\r\n            for (let i = 0; i < this.vaoMax; i++) {\r\n                /* eslint-disable max-len */\r\n                const vertexBuffer = this.vertexBuffers[i] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n                /* eslint-enable max-len */\r\n\r\n                // build the vao object that will render..\r\n                const vao = this.renderer.createVao()\r\n                    .addIndex(this.indexBuffer)\r\n                    .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n                    .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 3 * 4)\r\n                    .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4);\r\n\r\n                if (attrs.aTextureId) {\r\n                    vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4);\r\n                }\r\n\r\n                this.vaos[i] = vao;\r\n            }\r\n\r\n            this.vao = this.vaos[0];\r\n        }\r\n\r\n        /**\r\n         * Called before the renderer starts rendering.\r\n         *\r\n         */\r\n        onPrerender() {\r\n            this.vertexCount = 0;\r\n        }\r\n\r\n        /**\r\n         * Renders the sprite object.\r\n         *\r\n         * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\r\n         */\r\n        render(sprite: Sprite) {\r\n            // TODO set blend modes..\r\n            // check texture..\r\n            if (this.currentIndex >= this.size) {\r\n                this.flush();\r\n            }\r\n\r\n            // get the uvs for the texture\r\n\r\n            // if the uvs have not updated then no point rendering just yet!\r\n            if (!(sprite as any)._texture._uvs) {\r\n                return;\r\n            }\r\n\r\n            // push a texture.\r\n            // increment the batchsize\r\n            this.sprites[this.currentIndex++] = sprite;\r\n        }\r\n\r\n        /**\r\n         * Renders the content and empties the current batch.\r\n         *\r\n         */\r\n        flush() {\r\n            if (this.currentIndex === 0) {\r\n                return;\r\n            }\r\n\r\n            const gl = this.renderer.gl;\r\n            const MAX_TEXTURES = this.MAX_TEXTURES;\r\n\r\n            const np2 = utils.nextPow2(this.currentIndex);\r\n            const log2 = utils.log2(np2);\r\n            const buffer = this.buffers[log2];\r\n\r\n            const sprites = this.sprites;\r\n            const groups = this.groups;\r\n\r\n            const float32View = buffer.float32View;\r\n            const uint32View = buffer.uint32View;\r\n\r\n            // const touch = 0;// this.renderer.textureGC.count;\r\n\r\n            let index = 0;\r\n            let nextTexture: any;\r\n            let currentTexture: BaseTexture;\r\n            let groupCount = 1;\r\n            let textureId = 0;\r\n            let textureCount = 0;\r\n            let currentGroup = groups[0];\r\n            let vertexData;\r\n            let uvs;\r\n            let blendMode = premultiplyBlendMode[\r\n                (sprites[0] as any)._texture.baseTexture.premultipliedAlpha ? 1 : 0][sprites[0].blendMode];\r\n\r\n            currentGroup.textureCount = 0;\r\n            currentGroup.start = 0;\r\n            currentGroup.blend = blendMode;\r\n\r\n            TICK++;\r\n\r\n            let i;\r\n\r\n            for (i = 0; i < this.currentIndex; ++i) {\r\n                // upload the sprite elemetns...\r\n                // they have all ready been calculated so we just need to push them into the buffer.\r\n\r\n                // upload the sprite elemetns...\r\n                // they have all ready been calculated so we just need to push them into the buffer.\r\n                const sprite = sprites[i] as any;\r\n\r\n                nextTexture = sprite._texture.baseTexture;\r\n                textureId = nextTexture._virtalBoundId;\r\n\r\n                const spriteBlendMode = premultiplyBlendMode[Number(nextTexture.premultipliedAlpha)][sprite.blendMode];\r\n\r\n                if (blendMode !== spriteBlendMode) {\r\n                    // finish a group..\r\n                    blendMode = spriteBlendMode;\r\n\r\n                    // force the batch to break!\r\n                    currentTexture = null;\r\n                    textureCount = MAX_TEXTURES;\r\n                    TICK++;\r\n                }\r\n\r\n                if (currentTexture !== nextTexture) {\r\n                    currentTexture = nextTexture;\r\n\r\n                    if (nextTexture._enabled !== TICK) {\r\n                        if (textureCount === MAX_TEXTURES) {\r\n                            TICK++;\r\n\r\n                            textureCount = 0;\r\n\r\n                            currentGroup.size = i - currentGroup.start;\r\n\r\n                            currentGroup = groups[groupCount++];\r\n                            currentGroup.textureCount = 0;\r\n                            currentGroup.blend = blendMode;\r\n                            currentGroup.start = i;\r\n                        }\r\n\r\n                        nextTexture._enabled = TICK;\r\n                        nextTexture._virtalBoundId = textureCount;\r\n\r\n                        currentGroup.textures[currentGroup.textureCount++] = nextTexture;\r\n                        textureCount++;\r\n                    }\r\n                }\r\n\r\n                vertexData = sprite.vertexData;\r\n\r\n                // TODO this sum does not need to be set each frame..\r\n                uvs = sprite._texture._uvs.uvsUint32;\r\n                textureId = nextTexture._batchId;\r\n\r\n                if (vertexData.length === 8) {\r\n                    //PIXI standart sprite\r\n                    if (this.renderer.roundPixels) {\r\n                        const resolution = this.renderer.resolution;\r\n\r\n                        float32View[index] = ((vertexData[0] * resolution) | 0) / resolution;\r\n                        float32View[index + 1] = ((vertexData[1] * resolution) | 0) / resolution;\r\n                        float32View[index + 2] = 1.0;\r\n\r\n                        float32View[index + 6] = ((vertexData[2] * resolution) | 0) / resolution;\r\n                        float32View[index + 7] = ((vertexData[3] * resolution) | 0) / resolution;\r\n                        float32View[index + 8] = 1.0;\r\n\r\n                        float32View[index + 12] = ((vertexData[4] * resolution) | 0) / resolution;\r\n                        float32View[index + 13] = ((vertexData[5] * resolution) | 0) / resolution;\r\n                        float32View[index + 14] = 1.0;\r\n\r\n                        float32View[index + 18] = ((vertexData[6] * resolution) | 0) / resolution;\r\n                        float32View[index + 19] = ((vertexData[7] * resolution) | 0) / resolution;\r\n                        float32View[index + 20] = 1.0;\r\n                    }\r\n                    else {\r\n                        float32View[index] = vertexData[0];\r\n                        float32View[index + 1] = vertexData[1];\r\n                        float32View[index + 2] = 1.0;\r\n\r\n                        float32View[index + 6] = vertexData[2];\r\n                        float32View[index + 7] = vertexData[3];\r\n                        float32View[index + 8] = 1.0;\r\n\r\n                        float32View[index + 12] = vertexData[4];\r\n                        float32View[index + 13] = vertexData[5];\r\n                        float32View[index + 14] = 1.0;\r\n\r\n                        float32View[index + 18] = vertexData[6];\r\n                        float32View[index + 19] = vertexData[7];\r\n                        float32View[index + 20] = 1.0;\r\n                    }\r\n                } else {\r\n                    // projective 2d/3d sprite\r\n\r\n                    // I removed roundPixels, dont need that for those kind of sprites\r\n\r\n                    float32View[index] = vertexData[0];\r\n                    float32View[index + 1] = vertexData[1];\r\n                    float32View[index + 2] = vertexData[2];\r\n\r\n                    float32View[index + 6] = vertexData[3];\r\n                    float32View[index + 7] = vertexData[4];\r\n                    float32View[index + 8] = vertexData[5];\r\n\r\n                    float32View[index + 12] = vertexData[6];\r\n                    float32View[index + 13] = vertexData[7];\r\n                    float32View[index + 14] = vertexData[8];\r\n\r\n                    float32View[index + 18] = vertexData[9];\r\n                    float32View[index + 19] = vertexData[10];\r\n                    float32View[index + 20] = vertexData[11];\r\n                }\r\n\r\n                uint32View[index + 3] = uvs[0];\r\n                uint32View[index + 9] = uvs[1];\r\n                uint32View[index + 15] = uvs[2];\r\n                uint32View[index + 21] = uvs[3];\r\n\r\n                /* eslint-disable max-len */\r\n                const alpha = Math.min(sprite.worldAlpha, 1.0);\r\n                // we dont call extra function if alpha is 1.0, that's faster\r\n                const argb = alpha < 1.0 && nextTexture.premultipliedAlpha ? premultiplyTint(sprite._tintRGB, alpha)\r\n                    : sprite._tintRGB + (alpha * 255 << 24);\r\n\r\n                uint32View[index + 4] = uint32View[index + 10] = uint32View[index + 16] = uint32View[index + 22] = argb;\r\n                float32View[index + 5] = float32View[index + 11] = float32View[index + 17] = float32View[index + 23] = nextTexture._virtalBoundId;\r\n                /* eslint-enable max-len */\r\n                index += 24;\r\n            }\r\n\r\n            currentGroup.size = i - currentGroup.start;\r\n\r\n            if (!settings.CAN_UPLOAD_SAME_BUFFER) {\r\n                // this is still needed for IOS performance..\r\n                // it really does not like uploading to the same buffer in a single frame!\r\n                if (this.vaoMax <= this.vertexCount) {\r\n                    this.vaoMax++;\r\n\r\n                    const attrs = this.shader.attributes;\r\n\r\n                    /* eslint-disable max-len */\r\n                    const vertexBuffer = this.vertexBuffers[this.vertexCount] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n                    /* eslint-enable max-len */\r\n\r\n                    // build the vao object that will render..\r\n                    const vao = this.renderer.createVao()\r\n                        .addIndex(this.indexBuffer)\r\n                        .addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n                        .addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 3 * 4)\r\n                        .addAttribute(vertexBuffer, attrs.aColor, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4);\r\n\r\n                    if (attrs.aTextureId) {\r\n                        vao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4);\r\n                    }\r\n\r\n                    this.vaos[this.vertexCount] = vao;\r\n                }\r\n\r\n                this.renderer.bindVao(this.vaos[this.vertexCount]);\r\n\r\n                this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\r\n\r\n                this.vertexCount++;\r\n            }\r\n            else {\r\n                // lets use the faster option, always use buffer number 0\r\n                this.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\r\n            }\r\n\r\n            // / render the groups..\r\n            for (i = 0; i < groupCount; i++) {\r\n                const group = groups[i];\r\n                const groupTextureCount = group.textureCount;\r\n\r\n\r\n                for (let j = 0; j < groupTextureCount; j++) {\r\n                    this.renderer.bindTexture(group.textures[j], j, true);\r\n                }\r\n\r\n                // set the blend mode..\r\n                this.renderer.state.setBlendMode(group.blend);\r\n\r\n                gl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\r\n            }\r\n\r\n            // reset elements for the next flush\r\n            this.currentIndex = 0;\r\n        }\r\n\r\n        /**\r\n         * Starts a new sprite batch.\r\n         */\r\n        start() {\r\n            this.renderer.bindShader(this.shader);\r\n\r\n            if (settings.CAN_UPLOAD_SAME_BUFFER) {\r\n                // bind buffer #0, we don't need others\r\n                this.renderer.bindVao(this.vaos[this.vertexCount]);\r\n\r\n                this.vertexBuffers[this.vertexCount].bind();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Stops and flushes the current batch.\r\n         *\r\n         */\r\n        stop() {\r\n            this.flush();\r\n        }\r\n\r\n        /**\r\n         * Destroys the SpriteRenderer.\r\n         *\r\n         */\r\n        destroy() {\r\n            for (let i = 0; i < this.vaoMax; i++) {\r\n                if (this.vertexBuffers[i]) {\r\n                    this.vertexBuffers[i].destroy();\r\n                }\r\n                if (this.vaos[i]) {\r\n                    this.vaos[i].destroy();\r\n                }\r\n            }\r\n\r\n            if (this.indexBuffer) {\r\n                this.indexBuffer.destroy();\r\n            }\r\n\r\n            this.renderer.off('prerender', this.onPrerender, this);\r\n\r\n            super.destroy();\r\n\r\n            if (this.shader) {\r\n                this.shader.destroy();\r\n                this.shader = null;\r\n            }\r\n\r\n            this.vertexBuffers = null;\r\n            this.vaos = null;\r\n            this.indexBuffer = null;\r\n            this.indices = null;\r\n\r\n            this.sprites = null;\r\n\r\n            for (let i = 0; i < this.buffers.length; ++i) {\r\n                this.buffers[i].destroy();\r\n            }\r\n        }\r\n    }\r\n\r\n    WebGLRenderer.registerPlugin('sprite2d', SpriteRenderer);\r\n}\r\nnamespace pixi_projection.utils {\r\n\texport function createIndicesForQuads(size: number) {\r\n\t\t// the total number of indices in our array, there are 6 points per quad.\r\n\r\n\t\tconst totalIndices = size * 6;\r\n\r\n\t\tconst indices = new Uint16Array(totalIndices);\r\n\r\n\t\t// fill the indices with the quads to draw\r\n\t\tfor (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\r\n\t\t\tindices[i + 0] = j + 0;\r\n\t\t\tindices[i + 1] = j + 1;\r\n\t\t\tindices[i + 2] = j + 2;\r\n\t\t\tindices[i + 3] = j + 0;\r\n\t\t\tindices[i + 4] = j + 2;\r\n\t\t\tindices[i + 5] = j + 3;\r\n\t\t}\r\n\r\n\t\treturn indices;\r\n\t}\r\n\r\n\t//bit twiddle is here\r\n\r\n\texport function isPow2(v: number): boolean {\r\n\t\treturn !(v & (v - 1)) && (!!v);\r\n\t}\r\n\r\n\texport function nextPow2(v: number): number {\r\n\t\tv += +(v === 0);\r\n\t\t--v;\r\n\t\tv |= v >>> 1;\r\n\t\tv |= v >>> 2;\r\n\t\tv |= v >>> 4;\r\n\t\tv |= v >>> 8;\r\n\t\tv |= v >>> 16;\r\n\t\treturn v + 1;\r\n\t}\r\n\r\n\texport function log2(v: number) {\r\n\t\tlet r: number, shift: number;\r\n\t\tr = +(v > 0xFFFF) << 4;\r\n\t\tv >>>= r;\r\n\t\tshift = +(v > 0xFF  ) << 3;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0xF   ) << 2;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0x3   ) << 1;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\treturn r | (v >> 1);\r\n\t}\r\n\r\n\timport PointLike = PIXI.PointLike;\r\n\r\n\texport function getIntersectionFactor(p1: PointLike, p2: PointLike, p3: PointLike, p4: PointLike, out: PointLike): number {\r\n\t\tlet A1 = p2.x - p1.x, B1 = p3.x - p4.x, C1 = p3.x - p1.x;\r\n\t\tlet A2 = p2.y - p1.y, B2 = p3.y - p4.y, C2 = p3.y - p1.y;\r\n\t\tlet D = A1 * B2 - A2 * B1;\r\n\t\tif (Math.abs(D) < 1e-7) {\r\n\t\t\tout.x = A1;\r\n\t\t\tout.y = A2;\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tlet T = C1 * B2 - C2 * B1;\r\n\t\tout.x = p1.x + (T / D) * (p2.x - p1.x);\r\n\t\tout.y = p1.y + (T / D) * (p2.y - p1.y);\r\n\t\tlet U = A1 * C2 - A2 * C1;\r\n\r\n\t\treturn T * U < 0 ? -1 : 1;\r\n\t}\r\n\r\n\texport function getPositionFromQuad(p: Array<PointLike>, anchor: PointLike, out: PointLike) {\r\n\t\tout = out || new PIXI.Point();\r\n\t\tlet a1 = 1.0 - anchor.x, a2 = 1.0 - a1;\r\n\t\tlet b1 = 1.0 - anchor.y, b2 = 1.0 - b1;\r\n\t\tout.x = (p[0].x * a1 + p[1].x * a2) * b1 + (p[3].x * a1 + p[2].x * a2) * b2;\r\n\t\tout.y = (p[0].y * a1 + p[1].y * a2) * b1 + (p[3].y * a1 + p[2].y * a2) * b2;\r\n\t\treturn out;\r\n\t}\r\n}\r\n///<reference types=\"pixi.js\"/>\r\n(PIXI as any).projection = pixi_projection;\r\n"]}